[tox]
minversion = 2.4
envlist = lint,docs,py38,py37,py36

[testenv]
deps =
    coverage
    pretend
    pytest
    jaraco.envs
    portend
    pytest-services
    munch
commands =
    coverage run --source twine -m pytest {posargs:tests}
    coverage report -m

[testenv:docs]
deps =
    -rdocs/requirements.txt
commands =
    sphinx-build -W -b html -d {envtmpdir}/doctrees docs docs/_build/html
    sphinx-build -W -b doctest -d {envtmpdir}/doctrees docs docs/_build/html
    doc8 docs
    sphinx-build -W -b linkcheck -d {envtmpdir}/doctrees docs docs/_build/linkcheck
    python setup.py sdist
    twine check dist/*

[testenv:format]
skip_install = True
deps =
    isort
    black
commands =
    isort --recursive twine/ tests/
    black twine/ tests/

[testenv:code-style]
skip_install = True
deps =
    {[testenv:format]deps}
    flake8
commands =
    isort --check-only --diff --recursive twine/ tests/
    black --check --diff twine/ tests/
    flake8 twine/ tests/

[testenv:typing]
skip_install = True
deps =
    mypy
    lxml
commands =
    # TODO: Consider checking the tests after the source is fully typed
    mypy {posargs:--html-report mypy --txt-report mypy twine}

[testenv:lint]
skip_install = True
deps =
    {[testenv:code-style]deps}
    {[testenv:typing]deps}
commands =
    {[testenv:code-style]commands}
    {[testenv:typing]commands}

[testenv:release]
# disabled for twine to cause it to upload itself
# skip_install = True
# specify Python 3 to use platform's default Python 3
basepython = python3
deps =
    pep517>=0.5
    twine>=1.13
    path.py
passenv =
    TWINE_PASSWORD
    TWINE_REPOSITORY
setenv =
    TWINE_USERNAME = {env:TWINE_USERNAME:__token__}
commands =
    python -c "import path; path.Path('dist').rmtree_p()"
    python -m pep517.build .
    python -m twine upload dist/*

[testenv:devpi]
deps =
    devpi-server
    devpi

[testenv:pypiserver]
deps =
    pypiserver
