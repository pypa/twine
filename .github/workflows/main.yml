name: Main

on:
  push:
  pull_request:
  schedule:
    - cron: "0 0 * * *" # daily

env:
  FORCE_COLOR: "1"
  TOX_TESTENV_PASSENV: "FORCE_COLOR"

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - name: Install dependencies
        run: python -m pip install tox
      - name: Run linting
        run: python -m tox -e lint

  test:
    strategy:
      matrix:
        python:
          - "3.6"
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"
        platform:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Install dependencies
        run: python -m pip install tox
      - name: Run type-checking
        run: python -m tox -e types
      - name: Run tests
        run: python -m tox -e py -- --cov-report xml
      - uses: codecov/codecov-action@v1
        if: github.event_name != 'schedule'
        with:
          file: ./coverage.xml
          name: ${{ matrix.python }} - ${{ matrix.platform }}
          fail_ci_if_error: true

  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          # Mininum supported Python version
          python-version: "3.6"
      - name: Install dependencies
        run: python -m pip install tox
      - name: Build docs
        run: python -m tox -e docs

  release:
    needs:
      - lint
      - test
      - docs
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - name: Install dependencies
        run: python -m pip install tox
      - name: Release
        run: tox -e release
        env:
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
